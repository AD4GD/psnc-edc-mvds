---
- name: deploy stateless services
  hosts: edc-connector-instances

  vars:
    horizontal_pod_autoscalers_state: "{{ 'present' if with_stateless_services_horizontal_pod_autoscalers else 'absent' }}"
    horizontal_pod_autoscalers_task_heading: "{{ 'deploy' if with_stateless_services_horizontal_pod_autoscalers else 'purge' }}"

  module_defaults:
    k8s:
      wait: true
      wait_timeout: "{{ k8s_wait_timeout }}"
      state: present
      namespace: "{{ k8s_namespace }}"

  tasks:
    - name: "deploy deployment/{{ application }}-connectorconsumer"
      when: "deploy_connector|bool"
      tags:
        - connectorconsumer
        - deployment
      k8s:
        definition:
          apiVersion: v1
          kind: Deployment
          metadata:
            name: "{{ application }}-connectorconsumer"
            labels:
              component: connectorconsumer
              application: "{{ application }}"
          spec:
            progressDeadlineSeconds: "{{ progress_deadline_seconds }}"
            replicas: "{{ initial_replicas }}"
            strategy:
              type: RollingUpdate
            selector:
              matchLabels:
                component: connectorconsumer
                application: "{{ application }}"
            template:
              metadata:
                labels:
                  component: connectorconsumer
                  application: "{{ application }}"
                  image_tag: "{{ stateless_services_image_tag }}"
                  parameters_digest: "{{ (connectorconsumer_configmap_digest + connectorconsumer_secret_digest)|hash('sha1') }}"
              spec:
                serviceAccountName: "run-any-uid"
                ports:
                  - name: "api"
                    containerPort: 29191
                    protocol: "TCP"
                  - name: "management"
                    containerPort: 29193
                    protocol: "TCP"
                  - name: "protocol"
                    containerPort: 29194
                    protocol: "TCP"
                  - name: "public"
                    containerPort: 29291
                    protocol: "TCP"
                  - name: "control"
                    containerPort: 29192
                    protocol: "TCP"
                containers:
                  - name: "connectorconsumer"
                    image: "{{ registry_domain }}/{{ registry_project }}/{{ registry_application }}/connectorconsumer:{{ stateless_services_image_tag }}"
                    imagePullPolicy: "{{ stateless_services_image_pull_policy }}"
                    securityContext:
                      readOnlyRootFilesystem: false
                      runAsNonRoot: false
#                      runAsUser: 1000
                    resources: "{{ connector_resources }}"
                    envFrom:
                      - configMapRef:
                          name: "{{ application }}-connectorconsumer"
                          optional: true
                      - secretRef:
                          name: "{{ application }}-connectorconsumer"
                          optional: true
                    volumeMounts:
                      - name: "connectorconsumer-tmp"
                        mountPath: "/tmp"
                volumes:
                  - name: "connectorconsumer-tmp"
                    emptyDir:
                      medium: "Memory"

    - name: "deploy service/{{ application }}-connectorconsumer"
      when: "deploy_connector"
      tags:
        - connectorconsumer
        - service
      k8s:
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ application }}-connectorconsumer"
            labels:
              application: "{{ application }}"
              component: connectorconsumer
          spec:
            ports:
              - name: "api"
                port: 29191
              - name: "management"
                port: 29193
              - name: "protocol"
                port: 29194
              - name: "public"
                port: 29291
              - name: "control"
                port: 29192
            selector:
              application: "{{ application }}"
              component: connectorconsumer


#    - name: "deploy {{ application }} {{ expose_http_kind }}"
#      when: "expose_http_kind != 'none'"
#      tags:
#        - routes
#      vars:
#        expose_http_ip_whitelist: "0.0.0.0/0"
#        expose_http_paths:
#          - path: "/api/"
#            serviceName: "{{ application }}-varnish"
#            servicePort: varnish
#      k8s:
#        definition: "{{ lookup('template', 'expose-http-definitions.yaml', convert_data=True)|from_yaml }}"
