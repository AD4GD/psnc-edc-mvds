---
application: edc-connector
ansible_connection: local
registry_project: demeter
registry_application: edc-connector
initial_replicas: 1
progress_deadline_seconds: 300
with_async_workers: true
use_environment_ingress_address: false
k8s_wait_timeout: 600

project_name: DEMETER
repository_name: edc-connector

base_image_registry_domain: "{{ registry_domain }}"
base_image_registry_project: "base"
connectorconsumer_init_containers_base_image: "{{ base_image_registry_domain }}/{{ base_image_registry_project }}/alpine"
connectorprovider_init_containers_base_image: "{{ base_image_registry_domain }}/{{ base_image_registry_project }}/alpine"
minio_init_containers_base_image: "{{ base_image_registry_domain }}/{{ base_image_registry_project }}/alpine"

readiness_probe_initial_delay: 3
readiness_probe_period: 15
readiness_probe_timeout: 10

liveness_probe_initial_delay: 30
liveness_probe_period: 30
liveness_probe_timeout: 60

with_stateless_services_horizontal_pod_autoscalers: true

connectorconsumer_resources:
  requests:
    cpu: "100m"
    memory: "1000Mi"
  limits:
    cpu: "1"
    memory: "2000Mi"

connectorprovider_resources:
  requests:
    cpu: "100m"
    memory: "1000Mi"
  limits:
    cpu: "1"
    memory: "2000Mi"

consumerdashboard_resources:
  requests:
    cpu: "100m"
    memory: "200Mi"
  limits:
    cpu: "1"
    memory: "400Mi"

providerdashboard_resources:
  requests:
    cpu: "100m"
    memory: "200Mi"
  limits:
    cpu: "1"
    memory: "400Mi"

consback_resources:
  requests:
    cpu: "100m"
    memory: "200Mi"
  limits:
    cpu: "1"
    memory: "400Mi"

minio_resources:
  requests:
    cpu: "1000m"
    memory: "300Mi"
  limits:
    cpu: "1500m"
    memory: "1Gi"

identityprovider_resources:
  requests:
    cpu: "100m"
    memory: "200Mi"
  limits:
    cpu: "1"
    memory: "400Mi"

federatedcatalog_resources:
  requests:
    cpu: "100m"
    memory: "1000Mi"
  limits:
    cpu: "1"
    memory: "2000Mi"

registrationservicefrontend_resources:
  requests:
    cpu: "100m"
    memory: "200Mi"
  limits:
    cpu: "1"
    memory: "400Mi"

registrationservicebackend_resources:
  requests:
    cpu: "100m"
    memory: "1000Mi"
  limits:
    cpu: "1"
    memory: "2000Mi"

deploy_stateful_services: true

deploy_connector: "{{ deploy_stateful_services }}"
deploy_datadashboard: "{{ deploy_stateful_services }}"
deploy_minio: "{{ deploy_stateful_services }}"
deploy_identityprovider: "{{ deploy_stateful_services }}"
deploy_registrationservice: "{{ deploy_stateful_services }}"

minio_pvc_storage_size: "2Gi"
minio_pvc_storage_class_name: ""

image_pull_secret: "regcred"
create_run_any_uid_service_account: true

MAIN_DOMAIN: "{{ inventory_hostname|regex_replace('-edc-connector-instance$', '') }}"

expose_http_kind: "routes"
expose_http_host: "{{ MAIN_DOMAIN }}"
# possible values: wildcard, static, acme, disabled
expose_http_tls_mode: 'wildcard'
expose_http_tls_redirect: true
expose_http_tls_allow_also_non_encrypted: false
expose_http_ip_whitelist: ""
expose_http_tls_secret_name: "{{ application }}-tls-secret"
expose_http_annotations: {}
expose_http_ingress_annotations: {}
expose_http_routes_annotations: {}
expose_http_name_prefix: "{{ application }}"
expose_http_k8s_entity_kind: "{{ 'Route' if expose_http_kind == 'routes' else 'Ingress' }}"
expose_http_k8s_entity_api_version: "{{ 'v1' if expose_http_kind == 'routes' else 'extensions/v1beta1' }}"

# TODO DV-272 remove KUBECTL_COMMAND
KUBECTL_COMMAND: kubectl
kubectl_command: "{{ KUBECTL_COMMAND }}"

# TODO DV-272 remove IMAGE_TAG
image_tag: "{{ application_version }}"
stateless_services_image_tag: "{{ image_tag }}"

# TODO DV-276: this should be a fixed value
stateful_services_image_tag: "{{ image_tag }}"
use_backup_velero_io_backup_volumes_annotation: false
use_minio_backup_velero_io_backup_volumes_annotation: false

stateless_services_image_pull_policy: "{{ 'IfNotPresent' if stateless_services_image_tag.startswith('commit-') else 'Always' }}"

ingress_scheme: "{{ 'https' if expose_http_tls_mode != 'disabled' else 'http' }}"

# TODO DV-272 remove ENVIRONMENT_INGRESS_ADDRESS
environment_ingress_address: "{{ ENVIRONMENT_INGRESS_ADDRESS|default('') }}"
ingress_address: "{{ environment_ingress_address if use_environment_ingress_address else MAIN_DOMAIN }}"

SENTRY_DSN: "https://132b6f2afb0c43b993b3f094c58a6658@sentry.apps.psnc.pl/6"

SECRET_KEY:
    when_missing: "{{ random_django_secret_key }}"

connectorconsumer_configmap__05_defaults:
  JVM_ARGS: ""
  SERVICE_HOST: "https://consumer-edc-connector.apps.paas-dev.psnc.pl"
  EDC_IDS_ID: "urn:connectorconsumer:psnc"
  EDC_PARTICIPANT_ID: "consumer"
  EDC_DSP_CALLBACK_ADDRESS: "https://consumer-edc-connector.apps.paas-dev.psnc.pl/protocol"
  EDC_DATAPLANE_API_PUBLIC_BASEURL: "https://consumer-edc-connector.apps.paas-dev.psnc.pl/public"
  WEB_HTTP_PORT: "29191"
  WEB_HTTP_PATH: "/api"
  WEB_HTTP_MANAGEMENT_PORT: "29193"
  WEB_HTTP_MANAGEMENT_PATH: "/management"
  WEB_HTTP_PROTOCOL_PORT: "29194"
  WEB_HTTP_PROTOCOL_PATH: "/protocol"
  WEB_HTTP_PUBLIC_PORT: "29291"
  WEB_HTTP_PUBLIC_PATH: "/public"
  WEB_HTTP_CONTROL_PORT: "29192"
  WEB_HTTP_CONTROL_PATH: "/control"
  WEB_HTTP_MANAGEMENT_AUTH_TYPE: "composite"
  WEB_HTTP_MANAGEMENT_AUTH_INCLUDES: '["tokenbased", "delegated"]'
  WEB_HTTP_MANAGEMENT_AUTH_CONTEXT: "management-api"
  WEB_HTTP_MANAGEMENT_AUTH_KEY: "edc"
  WEB_HTTP_MANAGEMENT_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  EDC_API_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  WEB_HTTP_CONTROL_AUTH_TYPE: "tokenbased"
  WEB_HTTP_CONTROL_AUTH_CONTEXT: "control-api"
  WEB_HTTP_CONTROL_AUTH_KEY: "edc"
  WEB_HTTP_DEFAULT_AUTH_TYPE: "tokenbased"
  WEB_HTTP_DEFAULT_AUTH_CONTEXT: "default-api"
  WEB_HTTP_DEFAULT_AUTH_KEY: "edc"
  EDC_RECEIVER_HTTP_ENDPOINT: "https://consback-edc-connector.apps.paas-dev.psnc.pl/edr-endpoint"
  EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: "https://consumer-edc-connector.apps.paas-dev.psnc.pl/control/token"
  EDC_PUBLIC_KEY_ALIAS: "dapsPublic"
  EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: "dapsPrivate"
  EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: "dapsPublic"
  PSNC_CONNECTOR_DAPS_KEYSTORE_FILE_PATH: "certs/consumer-daps.jks"
  EDC_KEYSTORE: "/app/certs/cert.pfx"
  EDC_VAULT: "/app/config/fs-consumer.vault"
  EDC_WEB_REST_CORS_ENABLED: true
  EDC_WEB_REST_CORS_HEADERS: origin,content-type,accept,authorization,x-api-key
  EDC_FEDERATED_NODE_URL: https://provider-edc-connector.apps.paas-dev.psnc.pl/protocol
  EDC_OAUTH_PROVIDER_JWKS_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/certs"
  EDC_OAUTH_TOKEN_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_CLIENT_ID: "consumer"
  EDC_OAUTH_CERTIFICATE_ALIAS: "dapsPublic"
  EDC_OAUTH_PRIVATE_KEY_ALIAS: "dapsPrivate"
  EDC_OAUTH_PROVIDER_AUDIENCE: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_ENDPOINT_AUDIENCE: "idsc:IDS_CONNECTORS_ALL"
  EDC_AGENT_IDENTITY_KEY: "client_id"
  EDC_IAM_TOKEN_SCOPE: "idsc:IDS_CONNECTOR_ATTRIBUTES_ALL"

connectorprovider_configmap__05_defaults:
  JVM_ARGS: ""
  SERVICE_HOST: "https://provider-edc-connector.apps.paas-dev.psnc.pl"
  EDC_IDS_ID: "urn:connectorprovider:psnc"
  EDC_PARTICIPANT_ID: "provider"
  EDC_DSP_CALLBACK_ADDRESS: "https://provider-edc-connector.apps.paas-dev.psnc.pl/protocol"
  EDC_DATAPLANE_API_PUBLIC_BASEURL: "https://provider-edc-connector.apps.paas-dev.psnc.pl/public"
  WEB_HTTP_PORT: "19191"
  WEB_HTTP_PATH: "/api"
  WEB_HTTP_MANAGEMENT_PORT: "19193"
  WEB_HTTP_MANAGEMENT_PATH: "/management"
  WEB_HTTP_PROTOCOL_PORT: "19194"
  WEB_HTTP_PROTOCOL_PATH: "/protocol"
  WEB_HTTP_PUBLIC_PORT: "19291"
  WEB_HTTP_PUBLIC_PATH: "/public"
  WEB_HTTP_CONTROL_PORT: "19192"
  WEB_HTTP_CONTROL_PATH: "/control"
  WEB_HTTP_MANAGEMENT_AUTH_TYPE: "composite"
  WEB_HTTP_MANAGEMENT_AUTH_INCLUDES: '["tokenbased", "delegated"]'
  WEB_HTTP_MANAGEMENT_AUTH_CONTEXT: "management-api"
  WEB_HTTP_MANAGEMENT_AUTH_KEY: "edc"
  WEB_HTTP_MANAGEMENT_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  EDC_API_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  WEB_HTTP_CONTROL_AUTH_TYPE: "tokenbased"
  WEB_HTTP_CONTROL_AUTH_CONTEXT: "control-api"
  WEB_HTTP_CONTROL_AUTH_KEY: "edc"
  WEB_HTTP_DEFAULT_AUTH_TYPE: "tokenbased"
  WEB_HTTP_DEFAULT_AUTH_CONTEXT: "default-api"
  WEB_HTTP_DEFAULT_AUTH_KEY: "edc"
  EDC_RECEIVER_HTTP_ENDPOINT: "https://consback-edc-connector.apps.paas-dev.psnc.pl/edr-endpoint"
  EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: "https://provider-edc-connector.apps.paas-dev.psnc.pl/control/token"
  EDC_PUBLIC_KEY_ALIAS: "dapsPublic"
  EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: "dapsPrivate"
  EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: "dapsPublic"
  PSNC_CONNECTOR_DAPS_KEYSTORE_FILE_PATH: "certs/provider-daps.jks"
  EDC_KEYSTORE: "/app/certs/cert.pfx"
  EDC_VAULT: "/app/config/fs-provider.vault"
  EDC_WEB_REST_CORS_ENABLED: true
  EDC_WEB_REST_CORS_HEADERS: origin,content-type,accept,authorization,x-api-key
  EDC_FEDERATED_NODE_URL: "https://provider-edc-connector.apps.paas-dev.psnc.pl/protocol"
  EDC_OAUTH_PROVIDER_JWKS_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/certs"
  EDC_OAUTH_TOKEN_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_CLIENT_ID: "provider"
  EDC_OAUTH_CERTIFICATE_ALIAS: "dapsPublic"
  EDC_OAUTH_PRIVATE_KEY_ALIAS: "dapsPrivate"
  EDC_OAUTH_PROVIDER_AUDIENCE: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_ENDPOINT_AUDIENCE: "idsc:IDS_CONNECTORS_ALL"
  EDC_AGENT_IDENTITY_KEY: "client_id"
  EDC_IAM_TOKEN_SCOPE: "idsc:IDS_CONNECTOR_ATTRIBUTES_ALL"

consback_configmap__05_defaults:
  MINIO_ENDPOINT: "edc-minio.apps.paas-dev.psnc.pl"

consback_secret__05_defaults:
  MINIO_ACCESS_KEY:
    when_missing: "{{ random_minio_user }}"
  MINIO_SECRET_KEY:
    when_missing: "{{ random_minio_pass }}"

minio_secret__05_defaults:
  MINIO_ACCESS_KEY:
    when_missing: "{{ random_minio_user }}"
  MINIO_SECRET_KEY:
    when_missing: "{{ random_minio_pass }}"

random_minio_user: "{{ lookup('password', '/dev/null length=12 chars=ascii_lowercase') }}"
random_minio_pass: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"

identityprovider_configmap__05_defaults:
  KC_DB:
    when_missing: "postgres"
  KC_DB_SCHEMA:
    when_missing: "public"
  KC_DB_URL:
    when_missing: "jdbc:postgresql://edc-connector-helm-postgres-three.edc-connector.svc:5432/keycloak"
  KC_HOSTNAME_URL:
    when_missing: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl"
  KC_HOSTNAME_ADMIN_URL:
    when_missing: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl"
  KEYCLOAK_FRONTEND_URL:
    when_missing: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/protocol"
  KC_PROXY:
    when_missing: "edge"

identityprovider_secret__05_defaults:
  KEYCLOAK_ADMIN:
    when_missing: "{{ random_keycloak_user }}"
  KEYCLOAK_ADMIN_PASSWORD:
    when_missing: "{{ random_keycloak_pass }}"

random_keycloak_user: "{{ lookup('password', '/dev/null length=12 chars=ascii_lowercase') }}"
random_keycloak_pass: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"

federatedcatalog_configmap__05_defaults:
  JVM_ARGS: ""
  SERVICE_HOST: "https://federatedcatalog-edc-connector.apps.paas-dev.psnc.pl"
  WEB_HTTP_PORT: "8080"
  WEB_HTTP_PATH: "/api"
  WEB_HTTP_CATALOG_PORT: "8181"
  WEB_HTTP_CATALOG_PATH: "/catalog"
  WEB_HTTP_CATALOG_AUTH_TYPE: "composite"
  WEB_HTTP_CATALOG_AUTH_INCLUDES: '["tokenbased", "delegated"]'
  WEB_HTTP_CATALOG_AUTH_KEY: "edc"
  WEB_HTTP_CATALOG_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  EDC_API_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  WEB_HTTP_DEFAULT_AUTH_TYPE: "tokenbased"
  WEB_HTTP_DEFAULT_AUTH_CONTEXT: "default-api"
  WEB_HTTP_DEFAULT_AUTH_KEY: "edc"
  EDC_MVD_PARTICIPANTS_LIST_FILE: "config/participants.json"
  EDC_WEB_REST_CORS_ENABLED: true
  EDC_WEB_REST_CORS_HEADERS: origin,content-type,accept,authorization,x-api-key
  EDC_PUBLIC_KEY_ALIAS: "dapsPublic"
  EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: "dapsPrivate"
  EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: "dapsPublic"
  PSNC_CONNECTOR_DAPS_KEYSTORE_FILE_PATH: "certs/federated-catalog-daps.jks"
  EDC_IDS_ID: "urn:federatedcatalog:psnc"
  EDC_PARTICIPANT_ID: "federated-catalog"
  EDC_OAUTH_PROVIDER_JWKS_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/certs"
  EDC_OAUTH_TOKEN_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_CLIENT_ID: "federated-catalog"
  EDC_OAUTH_CERTIFICATE_ALIAS: "dapsPublic"
  EDC_OAUTH_PRIVATE_KEY_ALIAS: "dapsPrivate"
  EDC_OAUTH_PROVIDER_AUDIENCE: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_ENDPOINT_AUDIENCE: "idsc:IDS_CONNECTORS_ALL"
  EDC_AGENT_IDENTITY_KEY: "client_id"
  EDC_IAM_TOKEN_SCOPE: "idsc:IDS_CONNECTOR_ATTRIBUTES_ALL"

registrationservicebackend_configmap__05_defaults:
  JVM_ARGS: ""
  SERVICE_HOST: "https://registration-service-backend-edc-connector.apps.paas-dev.psnc.pl"
  WEB_HTTP_PORT: "38181"
  WEB_HTTP_PATH: "/api"
  WEB_HTTP_AUTHORITY_PORT: "38182"
  WEB_HTTP_AUTHORITY_PATH: "/authority"
  WEB_HTTP_AUTHORITY_AUTH_TYPE: "composite"
  WEB_HTTP_AUTHORITY_AUTH_INCLUDES: '["tokenbased", "delegated"]'
  WEB_HTTP_AUTHORITY_AUTH_KEY: "edc"
  WEB_HTTP_AUTHORITY_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  EDC_API_AUTH_DAC_KEY_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/Organizations/protocol/openid-connect/certs"
  WEB_HTTP_DEFAULT_AUTH_TYPE: "tokenbased"
  WEB_HTTP_DEFAULT_AUTH_CONTEXT: "default-api"
  WEB_HTTP_DEFAULT_AUTH_KEY: "edc"
  EDC_WEB_REST_CORS_ENABLED: true
  EDC_WEB_REST_CORS_HEADERS: origin,content-type,accept,authorization,x-api-key
  EDC_WEB_REST_CORS_METHODS: GET, POST, DELETE, PUT, OPTIONS, PATCH
  EDC_PUBLIC_KEY_ALIAS: "dapsPublic"
  EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: "dapsPrivate"
  EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: "dapsPublic"
  EDC_IDS_ID: "urn:federatedcatalog:psnc"
  EDC_PARTICIPANT_ID: "federated-catalog"
  EDC_OAUTH_PROVIDER_JWKS_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/certs"
  EDC_OAUTH_TOKEN_URL: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_CLIENT_ID: "federated-catalog"
  EDC_OAUTH_CERTIFICATE_ALIAS: "dapsPublic"
  EDC_OAUTH_PRIVATE_KEY_ALIAS: "dapsPrivate"
  EDC_OAUTH_PROVIDER_AUDIENCE: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl/realms/DAPS/protocol/openid-connect/token"
  EDC_OAUTH_ENDPOINT_AUDIENCE: "idsc:IDS_CONNECTORS_ALL"
  EDC_AGENT_IDENTITY_KEY: "client_id"
  EDC_IAM_TOKEN_SCOPE: "idsc:IDS_CONNECTOR_ATTRIBUTES_ALL"

idpfiller_configmap__05_defaults:
  WEB_HTTP_IDP_URI: "https://identityprovider-edc-connector.apps.paas-dev.psnc.pl"
  WEB_HTTP_RS_URI: "https://registration-service-backend-edc-connector.apps.paas-dev.psnc.pl"
  RUN_SCRIPT: 1 # 1 if need to execute, 0 if db already filled

# DO NOT CHANGE DEFINITIONS BELOW
#
deployed_parameters_packs: "{{ (['connectorconsumer', 'connectorprovider', 'consback', 'federatedcatalog' ] if deploy_connector else []) + (['consumerdashboard', 'providerdashboard'] if deploy_datadashboard else []) + (['minio'] if deploy_minio else [])  + (['identityprovider'] if deploy_identityprovider else []) + (['registrationservicefrontend', 'registrationservicebackend' ] if deploy_registrationservice else [])}}"

# definitions below are helper definitions - do not change this

# DO NOT CHANGE DEFINITIONS ABOVE
