version: '3.8'

services:

  provider-dashboard:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/data-dashboard:${IMAGE_TAG}
    ports:
      - "18080:80"
    volumes:
      - ../src/data-dashboard/deployment/conf-provider/provider.nginx.conf:/etc/nginx/nginx.conf
      - ../src/data-dashboard/deployment/conf-provider/provider.config.json:/usr/share/nginx/html/assets/config/app.config.json
    user: "root"
    depends_on:
      - provider-connector

  provider-connector:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/connector:${IMAGE_TAG}
    ports:
      - "19191:19191"
      - "19193:19193"
      - "19194:19194"
      - "19291:19291"
      - "19192:19192"
    volumes:
      - ../docker/connector/config/configuration-provider.properties:/app/configuration.properties:ro
      - ../docker/connector/config/keystore.pfx:/app/keystore.pfx:ro
      - ../docker/connector/config/fs-provider.vault:/app/fs.vault
      - ../docker/connector/config/api_collection.json:/app/api_collection.json
      - ../docker/connector/config/json_example.json:/app/json_example.json
    environment:
      EDC_FS_CONFIG: /app/configuration.properties
      EDC_API_AUTH_KEY: "fifi-info-zaneta"
    user: "root"
    depends_on:
      - provider-postgres
      - identity-provider

  provider-postgres:
    image: docker.io/bitnami/postgresql:11
    restart: always
    environment:
      POSTGRESQL_USERNAME: edc
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: edc
    ports:
      - '5432:5432'
    volumes:
      - 'provider-postgresql:/bitnami/postgresql'

  consumer-dashboard:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/data-dashboard:${IMAGE_TAG}
    ports:
      - "28080:80"
    volumes:
      - ../src/data-dashboard/deployment/conf-consumer/consumer.nginx.conf:/etc/nginx/nginx.conf
      - ../src/data-dashboard/deployment/conf-consumer/consumer.config.json:/usr/share/nginx/html/assets/config/app.config.json
    user: "root"
    depends_on:
      - consumer-connector

  consumer-connector:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/connector:${IMAGE_TAG}
    ports:
      - "29191:29191"
      - "29193:29193"
      - "29194:29194"
      - "29291:29291"
      - "29192:29192"
    volumes:
      - ../docker/connector/config/configuration-consumer.properties:/app/configuration.properties:ro
      - ../docker/connector/config/keystore.pfx:/app/keystore.pfx:ro
      - ../docker/connector/config/fs-consumer.vault:/app/fs.vault
    environment:
      EDC_FS_CONFIG: /app/configuration.properties
      EDC_API_AUTH_KEY: "fifi-info-zaneta"
    user: "root"
    depends_on:
      - consumer-postgres
      - identity-provider

  consumer-postgres:
    image: docker.io/bitnami/postgresql:11
    restart: always
    environment:
      POSTGRESQL_USERNAME: edc
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: edc
    ports:
      - '5433:5432'
    volumes:
      - 'consumer-postgresql:/bitnami/postgresql'

  consumer-backend:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/consumer-backend:${IMAGE_TAG}
    ports:
      - "4000:4000"
    environment:
      MINIO_ENDPOINT: "minio"
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio
    depends_on:
      - minio

  minio:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/minio:${IMAGE_TAG}
    command: server /data
    environment:
      - HOSTNAME=minio
      - MINIO_ACCESS_KEY=minio-user
      - MINIO_SECRET_KEY=minio-password
    expose:
      - "9000"
    restart: unless-stopped

  identity-provider:
    image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/${REGISTRY_APPLICATION}/identity-provider:${IMAGE_TAG}
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: identity-provider-postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: edc
      KC_HOSTNAME_URL: http://localhost:8081
      KC_HOSTNAME_ADMIN_URL: http://localhost:8081
      KC_HTTP_ENABLED: 'true'
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: edc
      KEYCLOAK_FRONTEND_URL: http://identity-provider:8080
    depends_on:
      - identity-provider-postgres
    ports:
      - "8081:8080"

  identity-provider-postgres:
    image: docker.io/bitnami/postgresql:11
    restart: always
    environment:
      POSTGRESQL_USERNAME: keycloak
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: keycloak
    ports:
      - '5434:5432'
    volumes:
      - 'identity-provider-postgresql:/bitnami/postgresql'

volumes:
  consumer-postgresql:
    driver: local
  provider-postgresql:
    driver: local
  identity-provider-postgresql:
    driver: local
