[uwsgi]
chdir=/srv/src
virtualenv=/srv/venv

env=_SRV_RUNNING_INSIDE_UWSGI=True
env=SRV_UWSGI_GEVENT={{ SRV_UWSGI_GEVENT }}

strict
pidfile=/var/run/uwsgi/master.pid
#logto2=/srv/uwsgi.log
stats=/var/run/uwsgi/stats.socket
py-tracebacker=/var/run/uwsgi/tracebacker.socket

static-map=/api/static/=/srv/src/collected-static/
# uid=root
# gid=root

module=main.wsgi:application
need-app
master
vacuum

http=0.0.0.0:{{ SRV_DJANGO_PORT }}
listen={{ SRV_UWSGI_LISTEN }}
die-on-term

{% if SRV_UWSGI_HARAKIRI %}
harakiri={{ SRV_UWSGI_HARAKIRI_TIMEOUT }}
harakiri-verbose
{% else %}
# harakiri is disabled
{% endif %}

#post-buffering=32768

# max-requests=20000
# memory-report

# http://uwsgi-docs.readthedocs.org/en/latest/articles/SerializingAccept.html
# Disabled as it seems to have a bad effect on reqs/s performance
#thunder-lock

# Common logging options
log-x-forwarded-for

# disable-logging
# log-5xx
# log-slow=2500
backtrace-depth=32

{% if SRV_UWSGI_GEVENT %}
# Number of "workers" in gevent loop (e.g. we can be waiting for this many network IO blocking events)
gevent={{ SRV_UWSGI_GEVENT_CORES }}
gevent-monkey-patch
{% else %}
# gevent is disabled
{% endif %}

# env=DJANGO_SETTINGS_MODULE=main.settings
# env=SURROUND_RUNNING_ON_PLATFORM=True

processes={{ SRV_UWSGI_PROCESSES }}
threads=1

{% if SRV_UWSGI_KEEP_ALIVE %}
http-keepalive={{ SRV_UWSGI_KEEP_ALIVE_TIMEOUT }}
add-header=Connection: Keep-Alive
{% else %}
add-header=Connection: close
{% endif %}

log-format = [%(ltime)] django %(addr) "%(method) http://%(host)%(uri) %(proto)" %(status) "%(reason_phrase)" render %(rsize)b %(micros)us "%(referer)" "%(uagent)" %(var.HTTP_X_REQUEST_ID) 0

socket-timeout = {{ SRV_UWSGI_SOCKET_TIMEOUT }}
buffer-size = {{ SRV_UWSGI_BUFFER_SIZE }}

{% for option in SRV_UWSGI_EXTRA_OPTIONS %}
{{ option }}
{% endfor %}
